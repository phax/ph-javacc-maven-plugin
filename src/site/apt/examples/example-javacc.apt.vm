#*
 * Copyright 2001-2008 (C) The original author or authors.
 * Copyright 2008-2016 (C) The Codehaus (http://codehaus.org/)
 * Copyright (C) 2016-2025 Philip Helger (www.helger.com)
 * philip[at]helger[dot]com
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *#
 ------
 JavaCC Examples
 ------
 Paul Gier <pgier at redhat.com>
 ------
 January 04 2008
 ------

JavaCC Examples

  This page provides examples of how to use the <<<javacc>>> goal.

* Basic Example

  This example shows how to pass parameters to JavaCC.  A list of all 
  configuration options can be seen on the <<<{{{../javacc-mojo.html}javacc}}>>> goal page.
  
-------------------
<project>
  ...
  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>javacc-maven-plugin</artifactId>
        <version>${project.version}</version>
        <executions>
          <execution>
            <id>javacc</id>
            <goals>
              <goal>javacc</goal>
            </goals>
            <configuration>
              <lookAhead>2</lookAhead>
              <isStatic>false</isStatic>
            </configuration>
          </execution>
        </executions>
      </plugin>
      ...
    </plugins>
    ...
  </build>
  ...
</project>
-------------------

* Using Excludes and Includes

  Sometimes you may want to process some grammar files before others.  In this case the <<<\<includes\>>>> and <<<\<excludes\>>>>
  configuration options can be used.  In the example below, all files in the source directory that end 
  with <<<-step-1.jj>>> will be processed by JavaCC, and then all other <<<.jj>>> files will be processed.

-------------------
<project>
  ...
  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>javacc-maven-plugin</artifactId>
        <version>${project.version}</version>
        <executions>
          <execution>
            <id>javacc-step-1</id>
            <goals>
              <goal>javacc</goal>
            </goals>
            <configuration>
              <includes>
                <include>**/*-step-1.jj</include>
              </includes>
            </configuration>
          </execution>
          <execution>
            <id>javacc-step-2</id>
            <goals>
              <goal>javacc</goal>
            </goals>
            <configuration>
              <excludes>
                <exclude>**/*-step-1.jj</exclude>
              </excludes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      ...
    </plugins>
    ...
  </build>
  ...
</project>
-------------------

